<UserControl x:Class="UdpHost.MVVM.Views.ExchangeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:v="clr-namespace:UdpHost.MVVM.Views"
             xmlns:vm="clr-namespace:UdpHost.MVVM.ViewModels"
             xmlns:uc="clr-namespace:UdpHost.Themes.UserControls"
             mc:Ignorable="d" d:DataContext="{d:DesignInstance Type=vm:ExchangeViewModel, IsDesignTimeCreatable=True}"
             FontFamily="Verdana" FontSize="12"
             TextOptions.TextFormattingMode="Display"
             d:DesignHeight="350" d:DesignWidth="470">
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="Loaded">
            <BeginStoryboard>
                <Storyboard TargetProperty="Opacity">
                    <DoubleAnimation From="0" To="1" 
                                     FillBehavior="HoldEnd"    
                                     Duration="0:0:0.3" />
                </Storyboard>
            </BeginStoryboard>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="65"/>
            <RowDefinition Height="60"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Border Grid.Row="0" 
                Margin="10,10,10,5"
                Background="#FFFAFAFA"
                BorderBrush="#FFAAAAAA" BorderThickness="1"
                CornerRadius="10">
            <Grid Margin="5,0,5,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="190" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                        VerticalAlignment="Center">
                    <TextBlock Text="Сокет сервера" FontWeight="Bold"/>
                </Border>
                <Border Grid.Row="1" Grid.Column="0"  
                        VerticalAlignment="Center">
                    <TextBlock Text="Локальный IP:" />
                </Border>
                <uc:SocketTextBox Grid.Row="1" Grid.Column="1"
                                  x:Name="localSocketTextBox"
                                  Margin="5,0,5,0"
                                  Background="White"
                                  Socket="{Binding Path=LocalSocket, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Button Grid.Row="1" Grid.Column="3" 
                        Content="{Binding Path=ServerSocketButtonContent}"
                        Command="{Binding Path=OpenCloseServerSocket}"
                        CommandParameter="{Binding Path=Socket, ElementName=localSocketTextBox}" />

            </Grid>
        </Border>
        <Border Grid.Row="1" 
                Margin="10,5,10,5"
                Background="#FFFAFAFA"
                BorderBrush="#FFAAAAAA" BorderThickness="1"
                CornerRadius="10">
            <Grid Margin="5,0,5,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="190" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                        VerticalAlignment="Center">
                    <TextBlock Text="Удалённый сокет" FontWeight="Bold"/>
                </Border>
                <Border Grid.Row="1" Grid.Column="0"  
                        VerticalAlignment="Center">
                    <TextBlock Text="Удалённый IP:" />
                </Border>
                <uc:SocketTextBox Grid.Row="1" Grid.Column="1"
                                  x:Name="remoteSocketTextBox"
                                  Margin="5,0,5,0"
                                  Background="White"
                                  Socket="{Binding Path=RemoteSocket, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            </Grid>
        </Border>
        <Border Grid.Row="2" 
                Margin="10,5,10,10"
                Background="#FFFAFAFA"
                BorderBrush="#FFAAAAAA" BorderThickness="1"
                CornerRadius="10">
            <Grid Margin="5,0,5,5">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20" />
                    <RowDefinition Height="80"/>
                    <RowDefinition Height="20" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="100" />
                </Grid.ColumnDefinitions>
                <Border Grid.Row="0" Grid.Column="0"
                        VerticalAlignment="Center">
                    <TextBlock Text="Отправка" FontWeight="Bold"/>
                </Border>
                <TextBox Grid.Row="1" Grid.Column="0" 
                         TextWrapping="Wrap" AcceptsReturn="True"
                         ScrollViewer.VerticalScrollBarVisibility="Auto" 
                         ScrollViewer.HorizontalScrollBarVisibility="Auto"
                         Text="{Binding Path=TransmitData}"/>
                <Border Grid.Row="2" Grid.Column="0"
                        VerticalAlignment="Center">
                    <TextBlock Text="Приём" FontWeight="Bold"/>
                </Border>
                <TextBox Grid.Row="3" Grid.Column="0" 
                         IsReadOnly="True"
                         Focusable="False"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ScrollViewer.HorizontalScrollBarVisibility="Auto"
                         Text="{Binding Path=ReceivedData}">
                    <i:Interaction.Behaviors>
                        <v:DisplayTextBoxBehavior />
                    </i:Interaction.Behaviors>
                </TextBox>
                <StackPanel Grid.Row="1" Grid.Column="1">
                    <Button Height="23" 
                            Margin="5,0,0,0" 
                            Content="Отправить" 
                            IsEnabled="{Binding Path=IsServerAlive}"
                            Command="{Binding Path=Send}"
                            CommandParameter="{Binding Path=Socket, ElementName=remoteSocketTextBox}"/>
                    <Button Height="23" 
                            Margin="5,5,0,0" 
                            Content="Очистить" 
                            Command="{Binding Path=ClearText}"
                            CommandParameter="Transmit" />
                    <CheckBox Margin="5,5,0,0"
                              Content="Байты" 
                              IsChecked="{Binding Path=IsParseBytes}" />

                </StackPanel>
                <StackPanel Grid.Row="3" Grid.Column="1">
                    <Button Height="23" 
                            Margin="5,0,0,0" 
                            Content="Очистить" 
                            Command="{Binding Path=ClearText}"
                            CommandParameter="Receive" />
                    <CheckBox Margin="5,5,0,0"
                              Content="Источник" 
                              IsChecked="{Binding Path=IsDisplayedSourse}" />
                    <CheckBox Margin="5,5,0,0"
                              Content="Время" 
                              IsChecked="{Binding Path=IsDisplayedTime}" />
                    <CheckBox Margin="5,5,0,0"
                              Content="Байты" 
                              IsChecked="{Binding Path=IsBytes}" />


                </StackPanel>
            </Grid>
        </Border>

    </Grid>
</UserControl>
